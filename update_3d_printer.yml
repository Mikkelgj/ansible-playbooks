- name: update_3d_printer  # Changed name as requested
  hosts: all  # Targeting all hosts defined in your inventory
  #become: yes # Required for running system updates and reboot
  vars:
    moonraker_port: 7125 # Default Moonraker API port
    # Define states where it is NOT safe to run updates (or status could not be retrieved)
    unsafe_states: ['printing', 'unknown'] 

  tasks:

    - name: Get Moonraker printer status
      ansible.builtin.uri:
        url: "http://{{ inventory_hostname }}:{{ moonraker_port }}/printer/objects/query?idle_timeout"
        method: GET
        return_content: true
        status_code: 200
      register: printer_status_check
      delegate_to: localhost # Run the API check from the Ansible controller
      # CRITICAL FIX: Ignore errors so a connection failure or skip doesn't halt the play
      ignore_errors: true 

    - name: Set fact for printer state
      ansible.builtin.set_fact:
        # Use Jinja tests 'is success' and 'is skipped' for a more robust check on the task result.
        # This prevents the 'dict object has no attribute skipped' error when the task fails but is ignored.
        printer_state: >
          {% if printer_status_check is success and not printer_status_check.skipped and printer_status_check.status == 200 %}
            {{ (printer_status_check.content | from_json)['result']['status']['idle_timeout']['state'] | lower }}
          {% else %}
            # If the URI task failed, was skipped, or returned a non-200 status, assume 'unknown' (unsafe).
            unknown
          {% endif %}

    - name: Report current status
      ansible.builtin.debug:
        msg: "Printer state on {{ inventory_hostname }} is: {{ printer_state }}"
        
    # --- Conditional Block for OS Updates ---
    - block:
        
        - name: Update package cache and upgrade all system packages
          ansible.builtin.apt:
            update_cache: yes
            upgrade: dist
            autoremove: yes

        - name: Check if a reboot is required after update
          ansible.builtin.stat:
            path: /var/run/reboot-required
          register: reboot_required

        - name: Reboot the printer host if required
          ansible.builtin.reboot:
            reboot_timeout: 600 # Wait up to 10 minutes for reboot
          when: reboot_required.stat.exists

      # CRITICAL GUARDRAIL: Only run if the state is NOT in the list of unsafe states
      when: printer_state not in unsafe_states

    - name: Notify if update was skipped due to print or error
      ansible.builtin.debug:
        msg: "Update on {{ inventory_hostname }} was SKIPPED because the state is '{{ printer_state }}'. The print is safe or the status could not be confirmed."
      # This task will run if the block above was skipped (i.e., state is 'printing' or 'unknown')
      when: printer_state in unsafe_states
